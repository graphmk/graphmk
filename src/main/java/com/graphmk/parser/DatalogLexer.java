// 
// Decompiled by Procyon v0.5.36
// 

package com.graphmk.parser;

import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.VocabularyImpl;
import org.antlr.v4.runtime.RuntimeMetaData;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.Vocabulary;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.Lexer;

public class DatalogLexer extends Lexer
{
    protected static final DFA[] _decisionToDFA;
    protected static final PredictionContextCache _sharedContextCache;
    public static final int T__0 = 1;
    public static final int LPAR = 2;
    public static final int RPAR = 3;
    public static final int SQUOTE = 4;
    public static final int CONDITION = 5;
    public static final int COLON_H = 6;
    public static final int END_STATEMENT = 7;
    public static final int LOOP = 8;
    public static final int NODES = 9;
    public static final int EDGES = 10;
    public static final int AGGR = 11;
    public static final int STRING_LITERAL = 12;
    public static final int ID = 13;
    public static final int NUM = 14;
    public static final int WS = 15;
    public static String[] modeNames;
    public static final String[] ruleNames;
    private static final String[] _LITERAL_NAMES;
    private static final String[] _SYMBOLIC_NAMES;
    public static final Vocabulary VOCABULARY;
    @Deprecated
    public static final String[] tokenNames;
    public static final String _serializedATN = "\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\u0002\u0011{\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005\u00064\n\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0005\fU\n\f\u0003\r\u0003\r\u0003\r\u0003\r\u0007\r[\n\r\f\r\u000e\r^\u000b\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0007\u000ed\n\u000e\f\u000e\u000e\u000eg\u000b\u000e\u0003\u000f\u0006\u000fj\n\u000f\r\u000f\u000e\u000fk\u0003\u0010\u0003\u0010\u0005\u0010p\n\u0010\u0003\u0011\u0005\u0011s\n\u0011\u0003\u0012\u0006\u0012v\n\u0012\r\u0012\u000e\u0012w\u0003\u0012\u0003\u0012\u0002\u0002\u0013\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0002!\u0002#\u0011\u0003\u0002\u0006\u0003\u0002))\u0003\u00022;\u0005\u0002C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0082\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0003%\u0003\u0002\u0002\u0002\u0005'\u0003\u0002\u0002\u0002\u0007)\u0003\u0002\u0002\u0002\t+\u0003\u0002\u0002\u0002\u000b3\u0003\u0002\u0002\u0002\r5\u0003\u0002\u0002\u0002\u000f8\u0003\u0002\u0002\u0002\u0011:\u0003\u0002\u0002\u0002\u0013>\u0003\u0002\u0002\u0002\u0015D\u0003\u0002\u0002\u0002\u0017T\u0003\u0002\u0002\u0002\u0019V\u0003\u0002\u0002\u0002\u001ba\u0003\u0002\u0002\u0002\u001di\u0003\u0002\u0002\u0002\u001fo\u0003\u0002\u0002\u0002!r\u0003\u0002\u0002\u0002#u\u0003\u0002\u0002\u0002%&\u0007.\u0002\u0002&\u0004\u0003\u0002\u0002\u0002'(\u0007*\u0002\u0002(\u0006\u0003\u0002\u0002\u0002)*\u0007+\u0002\u0002*\b\u0003\u0002\u0002\u0002+,\u0007)\u0002\u0002,\n\u0003\u0002\u0002\u0002-4\u0004?@\u0002./\u0007@\u0002\u0002/4\u0007?\u0002\u000204\u0007>\u0002\u000212\u0007>\u0002\u000224\u0007?\u0002\u00023-\u0003\u0002\u0002\u00023.\u0003\u0002\u0002\u000230\u0003\u0002\u0002\u000231\u0003\u0002\u0002\u00024\f\u0003\u0002\u0002\u000256\u0007<\u0002\u000267\u0007/\u0002\u00027\u000e\u0003\u0002\u0002\u000289\u00070\u0002\u00029\u0010\u0003\u0002\u0002\u0002:;\u0007H\u0002\u0002;<\u0007q\u0002\u0002<=\u0007t\u0002\u0002=\u0012\u0003\u0002\u0002\u0002>?\u0007P\u0002\u0002?@\u0007q\u0002\u0002@A\u0007f\u0002\u0002AB\u0007g\u0002\u0002BC\u0007u\u0002\u0002C\u0014\u0003\u0002\u0002\u0002DE\u0007G\u0002\u0002EF\u0007f\u0002\u0002FG\u0007i\u0002\u0002GH\u0007g\u0002\u0002HI\u0007u\u0002\u0002I\u0016\u0003\u0002\u0002\u0002JK\u0007E\u0002\u0002KL\u0007Q\u0002\u0002LM\u0007W\u0002\u0002MN\u0007P\u0002\u0002NU\u0007V\u0002\u0002OP\u0007e\u0002\u0002PQ\u0007q\u0002\u0002QR\u0007w\u0002\u0002RS\u0007p\u0002\u0002SU\u0007v\u0002\u0002TJ\u0003\u0002\u0002\u0002TO\u0003\u0002\u0002\u0002U\u0018\u0003\u0002\u0002\u0002V\\\u0007)\u0002\u0002W[\n\u0002\u0002\u0002XY\u0007)\u0002\u0002Y[\u0007)\u0002\u0002ZW\u0003\u0002\u0002\u0002ZX\u0003\u0002\u0002\u0002[^\u0003\u0002\u0002\u0002\\Z\u0003\u0002\u0002\u0002\\]\u0003\u0002\u0002\u0002]_\u0003\u0002\u0002\u0002^\\\u0003\u0002\u0002\u0002_`\u0007)\u0002\u0002`\u001a\u0003\u0002\u0002\u0002ae\u0005!\u0011\u0002bd\u0005\u001f\u0010\u0002cb\u0003\u0002\u0002\u0002dg\u0003\u0002\u0002\u0002ec\u0003\u0002\u0002\u0002ef\u0003\u0002\u0002\u0002f\u001c\u0003\u0002\u0002\u0002ge\u0003\u0002\u0002\u0002hj\t\u0003\u0002\u0002ih\u0003\u0002\u0002\u0002jk\u0003\u0002\u0002\u0002ki\u0003\u0002\u0002\u0002kl\u0003\u0002\u0002\u0002l\u001e\u0003\u0002\u0002\u0002mp\u0005!\u0011\u0002np\t\u0003\u0002\u0002om\u0003\u0002\u0002\u0002on\u0003\u0002\u0002\u0002p \u0003\u0002\u0002\u0002qs\t\u0004\u0002\u0002rq\u0003\u0002\u0002\u0002s\"\u0003\u0002\u0002\u0002tv\t\u0005\u0002\u0002ut\u0003\u0002\u0002\u0002vw\u0003\u0002\u0002\u0002wu\u0003\u0002\u0002\u0002wx\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002yz\b\u0012\u0002\u0002z$\u0003\u0002\u0002\u0002\f\u00023TZ\\ekorw\u0003\b\u0002\u0002";
    public static final ATN _ATN;
    
    @Deprecated
    @Override
    public String[] getTokenNames() {
        return DatalogLexer.tokenNames;
    }
    
    @Override
    public Vocabulary getVocabulary() {
        return DatalogLexer.VOCABULARY;
    }
    
    public DatalogLexer(final CharStream input) {
        super(input);
        this._interp = new LexerATNSimulator(this, DatalogLexer._ATN, DatalogLexer._decisionToDFA, DatalogLexer._sharedContextCache);
    }
    
    @Override
    public String getGrammarFileName() {
        return "Datalog.g4";
    }
    
    @Override
    public String[] getRuleNames() {
        return DatalogLexer.ruleNames;
    }
    
    @Override
    public String getSerializedATN() {
        return "\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\u0002\u0011{\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005\u00064\n\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0005\fU\n\f\u0003\r\u0003\r\u0003\r\u0003\r\u0007\r[\n\r\f\r\u000e\r^\u000b\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0007\u000ed\n\u000e\f\u000e\u000e\u000eg\u000b\u000e\u0003\u000f\u0006\u000fj\n\u000f\r\u000f\u000e\u000fk\u0003\u0010\u0003\u0010\u0005\u0010p\n\u0010\u0003\u0011\u0005\u0011s\n\u0011\u0003\u0012\u0006\u0012v\n\u0012\r\u0012\u000e\u0012w\u0003\u0012\u0003\u0012\u0002\u0002\u0013\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0002!\u0002#\u0011\u0003\u0002\u0006\u0003\u0002))\u0003\u00022;\u0005\u0002C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0082\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0003%\u0003\u0002\u0002\u0002\u0005'\u0003\u0002\u0002\u0002\u0007)\u0003\u0002\u0002\u0002\t+\u0003\u0002\u0002\u0002\u000b3\u0003\u0002\u0002\u0002\r5\u0003\u0002\u0002\u0002\u000f8\u0003\u0002\u0002\u0002\u0011:\u0003\u0002\u0002\u0002\u0013>\u0003\u0002\u0002\u0002\u0015D\u0003\u0002\u0002\u0002\u0017T\u0003\u0002\u0002\u0002\u0019V\u0003\u0002\u0002\u0002\u001ba\u0003\u0002\u0002\u0002\u001di\u0003\u0002\u0002\u0002\u001fo\u0003\u0002\u0002\u0002!r\u0003\u0002\u0002\u0002#u\u0003\u0002\u0002\u0002%&\u0007.\u0002\u0002&\u0004\u0003\u0002\u0002\u0002'(\u0007*\u0002\u0002(\u0006\u0003\u0002\u0002\u0002)*\u0007+\u0002\u0002*\b\u0003\u0002\u0002\u0002+,\u0007)\u0002\u0002,\n\u0003\u0002\u0002\u0002-4\u0004?@\u0002./\u0007@\u0002\u0002/4\u0007?\u0002\u000204\u0007>\u0002\u000212\u0007>\u0002\u000224\u0007?\u0002\u00023-\u0003\u0002\u0002\u00023.\u0003\u0002\u0002\u000230\u0003\u0002\u0002\u000231\u0003\u0002\u0002\u00024\f\u0003\u0002\u0002\u000256\u0007<\u0002\u000267\u0007/\u0002\u00027\u000e\u0003\u0002\u0002\u000289\u00070\u0002\u00029\u0010\u0003\u0002\u0002\u0002:;\u0007H\u0002\u0002;<\u0007q\u0002\u0002<=\u0007t\u0002\u0002=\u0012\u0003\u0002\u0002\u0002>?\u0007P\u0002\u0002?@\u0007q\u0002\u0002@A\u0007f\u0002\u0002AB\u0007g\u0002\u0002BC\u0007u\u0002\u0002C\u0014\u0003\u0002\u0002\u0002DE\u0007G\u0002\u0002EF\u0007f\u0002\u0002FG\u0007i\u0002\u0002GH\u0007g\u0002\u0002HI\u0007u\u0002\u0002I\u0016\u0003\u0002\u0002\u0002JK\u0007E\u0002\u0002KL\u0007Q\u0002\u0002LM\u0007W\u0002\u0002MN\u0007P\u0002\u0002NU\u0007V\u0002\u0002OP\u0007e\u0002\u0002PQ\u0007q\u0002\u0002QR\u0007w\u0002\u0002RS\u0007p\u0002\u0002SU\u0007v\u0002\u0002TJ\u0003\u0002\u0002\u0002TO\u0003\u0002\u0002\u0002U\u0018\u0003\u0002\u0002\u0002V\\\u0007)\u0002\u0002W[\n\u0002\u0002\u0002XY\u0007)\u0002\u0002Y[\u0007)\u0002\u0002ZW\u0003\u0002\u0002\u0002ZX\u0003\u0002\u0002\u0002[^\u0003\u0002\u0002\u0002\\Z\u0003\u0002\u0002\u0002\\]\u0003\u0002\u0002\u0002]_\u0003\u0002\u0002\u0002^\\\u0003\u0002\u0002\u0002_`\u0007)\u0002\u0002`\u001a\u0003\u0002\u0002\u0002ae\u0005!\u0011\u0002bd\u0005\u001f\u0010\u0002cb\u0003\u0002\u0002\u0002dg\u0003\u0002\u0002\u0002ec\u0003\u0002\u0002\u0002ef\u0003\u0002\u0002\u0002f\u001c\u0003\u0002\u0002\u0002ge\u0003\u0002\u0002\u0002hj\t\u0003\u0002\u0002ih\u0003\u0002\u0002\u0002jk\u0003\u0002\u0002\u0002ki\u0003\u0002\u0002\u0002kl\u0003\u0002\u0002\u0002l\u001e\u0003\u0002\u0002\u0002mp\u0005!\u0011\u0002np\t\u0003\u0002\u0002om\u0003\u0002\u0002\u0002on\u0003\u0002\u0002\u0002p \u0003\u0002\u0002\u0002qs\t\u0004\u0002\u0002rq\u0003\u0002\u0002\u0002s\"\u0003\u0002\u0002\u0002tv\t\u0005\u0002\u0002ut\u0003\u0002\u0002\u0002vw\u0003\u0002\u0002\u0002wu\u0003\u0002\u0002\u0002wx\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002yz\b\u0012\u0002\u0002z$\u0003\u0002\u0002\u0002\f\u00023TZ\\ekorw\u0003\b\u0002\u0002";
    }
    
    @Override
    public String[] getModeNames() {
        return DatalogLexer.modeNames;
    }
    
    @Override
    public ATN getATN() {
        return DatalogLexer._ATN;
    }
    
    static {
        RuntimeMetaData.checkVersion("4.5", "4.5");
        _sharedContextCache = new PredictionContextCache();
        DatalogLexer.modeNames = new String[] { "DEFAULT_MODE" };
        ruleNames = new String[] { "T__0", "LPAR", "RPAR", "SQUOTE", "CONDITION", "COLON_H", "END_STATEMENT", "LOOP", "NODES", "EDGES", "AGGR", "STRING_LITERAL", "ID", "NUM", "LETTER_OR_DIGIT", "LETTER", "WS" };
        _LITERAL_NAMES = new String[] { null, "','", "'('", "')'", "'''", null, "':-'", "'.'", "'For'", "'Nodes'", "'Edges'" };
        _SYMBOLIC_NAMES = new String[] { null, null, "LPAR", "RPAR", "SQUOTE", "CONDITION", "COLON_H", "END_STATEMENT", "LOOP", "NODES", "EDGES", "AGGR", "STRING_LITERAL", "ID", "NUM", "WS" };
        VOCABULARY = new VocabularyImpl(DatalogLexer._LITERAL_NAMES, DatalogLexer._SYMBOLIC_NAMES);
        tokenNames = new String[DatalogLexer._SYMBOLIC_NAMES.length];
        for (int i = 0; i < DatalogLexer.tokenNames.length; ++i) {
            DatalogLexer.tokenNames[i] = DatalogLexer.VOCABULARY.getLiteralName(i);
            if (DatalogLexer.tokenNames[i] == null) {
                DatalogLexer.tokenNames[i] = DatalogLexer.VOCABULARY.getSymbolicName(i);
            }
            if (DatalogLexer.tokenNames[i] == null) {
                DatalogLexer.tokenNames[i] = "<INVALID>";
            }
        }
        _ATN = new ATNDeserializer().deserialize("\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\u0002\u0011{\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005\u00064\n\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0005\fU\n\f\u0003\r\u0003\r\u0003\r\u0003\r\u0007\r[\n\r\f\r\u000e\r^\u000b\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0007\u000ed\n\u000e\f\u000e\u000e\u000eg\u000b\u000e\u0003\u000f\u0006\u000fj\n\u000f\r\u000f\u000e\u000fk\u0003\u0010\u0003\u0010\u0005\u0010p\n\u0010\u0003\u0011\u0005\u0011s\n\u0011\u0003\u0012\u0006\u0012v\n\u0012\r\u0012\u000e\u0012w\u0003\u0012\u0003\u0012\u0002\u0002\u0013\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0002!\u0002#\u0011\u0003\u0002\u0006\u0003\u0002))\u0003\u00022;\u0005\u0002C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0082\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0003%\u0003\u0002\u0002\u0002\u0005'\u0003\u0002\u0002\u0002\u0007)\u0003\u0002\u0002\u0002\t+\u0003\u0002\u0002\u0002\u000b3\u0003\u0002\u0002\u0002\r5\u0003\u0002\u0002\u0002\u000f8\u0003\u0002\u0002\u0002\u0011:\u0003\u0002\u0002\u0002\u0013>\u0003\u0002\u0002\u0002\u0015D\u0003\u0002\u0002\u0002\u0017T\u0003\u0002\u0002\u0002\u0019V\u0003\u0002\u0002\u0002\u001ba\u0003\u0002\u0002\u0002\u001di\u0003\u0002\u0002\u0002\u001fo\u0003\u0002\u0002\u0002!r\u0003\u0002\u0002\u0002#u\u0003\u0002\u0002\u0002%&\u0007.\u0002\u0002&\u0004\u0003\u0002\u0002\u0002'(\u0007*\u0002\u0002(\u0006\u0003\u0002\u0002\u0002)*\u0007+\u0002\u0002*\b\u0003\u0002\u0002\u0002+,\u0007)\u0002\u0002,\n\u0003\u0002\u0002\u0002-4\u0004?@\u0002./\u0007@\u0002\u0002/4\u0007?\u0002\u000204\u0007>\u0002\u000212\u0007>\u0002\u000224\u0007?\u0002\u00023-\u0003\u0002\u0002\u00023.\u0003\u0002\u0002\u000230\u0003\u0002\u0002\u000231\u0003\u0002\u0002\u00024\f\u0003\u0002\u0002\u000256\u0007<\u0002\u000267\u0007/\u0002\u00027\u000e\u0003\u0002\u0002\u000289\u00070\u0002\u00029\u0010\u0003\u0002\u0002\u0002:;\u0007H\u0002\u0002;<\u0007q\u0002\u0002<=\u0007t\u0002\u0002=\u0012\u0003\u0002\u0002\u0002>?\u0007P\u0002\u0002?@\u0007q\u0002\u0002@A\u0007f\u0002\u0002AB\u0007g\u0002\u0002BC\u0007u\u0002\u0002C\u0014\u0003\u0002\u0002\u0002DE\u0007G\u0002\u0002EF\u0007f\u0002\u0002FG\u0007i\u0002\u0002GH\u0007g\u0002\u0002HI\u0007u\u0002\u0002I\u0016\u0003\u0002\u0002\u0002JK\u0007E\u0002\u0002KL\u0007Q\u0002\u0002LM\u0007W\u0002\u0002MN\u0007P\u0002\u0002NU\u0007V\u0002\u0002OP\u0007e\u0002\u0002PQ\u0007q\u0002\u0002QR\u0007w\u0002\u0002RS\u0007p\u0002\u0002SU\u0007v\u0002\u0002TJ\u0003\u0002\u0002\u0002TO\u0003\u0002\u0002\u0002U\u0018\u0003\u0002\u0002\u0002V\\\u0007)\u0002\u0002W[\n\u0002\u0002\u0002XY\u0007)\u0002\u0002Y[\u0007)\u0002\u0002ZW\u0003\u0002\u0002\u0002ZX\u0003\u0002\u0002\u0002[^\u0003\u0002\u0002\u0002\\Z\u0003\u0002\u0002\u0002\\]\u0003\u0002\u0002\u0002]_\u0003\u0002\u0002\u0002^\\\u0003\u0002\u0002\u0002_`\u0007)\u0002\u0002`\u001a\u0003\u0002\u0002\u0002ae\u0005!\u0011\u0002bd\u0005\u001f\u0010\u0002cb\u0003\u0002\u0002\u0002dg\u0003\u0002\u0002\u0002ec\u0003\u0002\u0002\u0002ef\u0003\u0002\u0002\u0002f\u001c\u0003\u0002\u0002\u0002ge\u0003\u0002\u0002\u0002hj\t\u0003\u0002\u0002ih\u0003\u0002\u0002\u0002jk\u0003\u0002\u0002\u0002ki\u0003\u0002\u0002\u0002kl\u0003\u0002\u0002\u0002l\u001e\u0003\u0002\u0002\u0002mp\u0005!\u0011\u0002np\t\u0003\u0002\u0002om\u0003\u0002\u0002\u0002on\u0003\u0002\u0002\u0002p \u0003\u0002\u0002\u0002qs\t\u0004\u0002\u0002rq\u0003\u0002\u0002\u0002s\"\u0003\u0002\u0002\u0002tv\t\u0005\u0002\u0002ut\u0003\u0002\u0002\u0002vw\u0003\u0002\u0002\u0002wu\u0003\u0002\u0002\u0002wx\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002yz\b\u0012\u0002\u0002z$\u0003\u0002\u0002\u0002\f\u00023TZ\\ekorw\u0003\b\u0002\u0002".toCharArray());
        _decisionToDFA = new DFA[DatalogLexer._ATN.getNumberOfDecisions()];
        for (int i = 0; i < DatalogLexer._ATN.getNumberOfDecisions(); ++i) {
            DatalogLexer._decisionToDFA[i] = new DFA(DatalogLexer._ATN.getDecisionState(i), i);
        }
    }
}
